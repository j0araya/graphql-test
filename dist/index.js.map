{"version":3,"sources":["../src/index.js"],"names":["app","listen","console","log"],"mappings":";;AAAA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAN;AAAA,CAAjsourcesContent":["import express from 'express';\n\nconst app = express();\n\napp.listen(3000, () => console.log('rurnning oon 3000'));\n// const { ApolloServer, gql } = require('apollo-server');\n\n// const typeDefs = gql`\n//   # Comments in GraphQL strings (such as this one) start with the hash (#) symbol.\n\n//   # This \"Book\" type defines the queryable fields for every book in our data source.\n  \n\n//   # The \"Query\" type is special: it lists all of the available queries that\n//   # clients can execute, along with the return type for each. In this\n//   # case, the \"books\" query returns an array of zero or more Books (defined above).\n\n//   type Item {\n//     id: ID!\n//     name: String\n//     icon: String\n//     description: String\n//     createdAt: String\n//   }\n\n//   type User {\n//     id: ID!\n//     name: String!\n//     lastname: String!\n//     description: String\n//     items: [Item]\n//     createdAt: String\n//   }\n\n//   type Query {\n//     users: [User]\n//     items: [Item]\n//     getUser(id:ID!): User\n//   }\n\n//   type Mutation {\n//     addItem(name: String, description: String): Item\n//     addUser(name: String, description: String): User\n//   }\n// `;\n\n// const items = [\n//   {\n//     id: 1,\n//     name: 'Me',\n//     icon: 'far fa-user',\n//     description: 'Perfil',\n//   },\n//   {\n//     id: 2,\n//     name: 'Profile',\n//     icon: 'far fa-id-badge',\n//     description: 'InformaciÃ³n General',\n//   },\n// ];\n\n// const users = [\n//   {\n//     id: 1,\n//     name: 'Alan Brito',\n//     lastname: 'Delgado',\n//     description: 'Enderezador de alambres',\n//   },\n//   {\n//     id: 2,\n//     name: 'Jesus',\n//     lastname: 'De Nazaret',\n//     description: 'Multiplicador varios',\n//   },\n//   {\n//     id: 3,\n//     name: 'Elba',\n//     lastname: 'Surita',\n//     description: 'CEO',\n//   },\n//   {\n//     id: 4,\n//     name: 'Elbert',\n//     lastname: 'G',\n//     description: 'Influencer',\n//   },\n//   {\n//     id: 5,\n//     name: 'Pika',\n//     lastname: 'Chu',\n//     description: 'Electrico',\n//   },\n//   {\n//     id: 7,\n//     name: 'El mismisimo',\n//     lastname: 'Albert Einstein',\n//     description: '',\n//   },\n//   {\n//     id: 8,\n//     name: 'Jhon',\n//     lastname: 'Lemmon',\n//     description: 'hey hey hey!',\n//   },\n// ];\n\n// // type Mutation {\n// //   addBook(title: String, author: String): Book\n// // }\n\n// const resolvers = {\n//   Query: {\n//     users: () => users,\n//     items: () => items,\n//     getUser: (parent, args) => users.find(u => u.id == args.id),\n//   },\n//   Mutation: {\n//     addUser: (parent, args) => {\n//       const item = {\n//         description: args.description,\n//         name: args.name,\n//         id: items.length + 1,\n//         createdAt: new Date().toISOString(),\n//       }\n//       items.push(item)\n//       return item\n//     }\n//   },\n\n// };\n\n// const server = new ApolloServer({\n//   typeDefs,\n//   resolvers,\n//   engine: {\n//     apiKey: \"service:qwerty-graph:-0tcB8w1oz_SVmcdB2ti8Q\",\n//   }\n// });\n// // The `listen` method launches a web server.\n// server.listen({ port: process.env.PORT || 4000 }).then(({ url }) => {\n//   console.log(`ğŸš€ Server ready at ${url}`);\n// });\n// "],"file":"index.js"}