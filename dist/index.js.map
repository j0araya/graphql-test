{"version":3,"sources":["../src/index.js"],"names":["PORT","process","env","app","server","set","get","req","res","pubsub","PubSub","mongo","connection","once","console","log","use","graphiql","schema","rootValue","context","messageId","listen","SubscriptionServer","execute","subscribe","path","express","join","__dirname"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,GAAG,GAAG,0BAAZ;AACA,IAAMC,MAAM,GAAG,wBAAaD,GAAb,CAAf;AAEA;AACAA,GAAG,CAACE,GAAJ,CAAQ,MAAR,EAAgBL,IAAhB;AACAG,GAAG,CAACG,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc,CACzB;AACD,CAFD;AAIA,IAAMC,MAAM,GAAG,IAAIC,4BAAJ,EAAf;;AACAC,qBAAMC,UAAN,CAAiBC,IAAjB,CAAsB,MAAtB,EAA8B,YAAM;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,CAFD;;AAGAZ,GAAG,CAACa,GAAJ,CAAQ,GAAR,EAAa,uBAAb;AACAb,GAAG,CAACa,GAAJ,CAAQ,UAAR,EAAoB,uBAApB,EAA4B,gCAAY;AACtCC,EAAAA,QAAQ,EAAE,IAD4B;AAEtCC,EAAAA,MAAM,EAANA,mBAFsC;AAGtCC,EAAAA,SAAS,EAAE,QAH2B;AAItCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,MADJ,CACW;;AADX;AAJ6B,CAAZ,CAA5B;AASAjB,MAAM,CAACkB,MAAP,CAActB,IAAd,EAAoB,YAAM;AACxB,MAAIuB,4CAAJ,CAAuB;AACrBC,IAAAA,OAAO,EAAPA,gBADqB;AAErBC,IAAAA,SAAS,EAATA,kBAFqB;AAGrBP,IAAAA,MAAM,EAANA;AAHqB,GAAvB,EAIG;AACDd,IAAAA,MAAM,EAAEA,MADP;AAEDsB,IAAAA,IAAI,EAAE;AAFL,GAJH,EADwB,CASxB;AACD,CAVD;AAYAvB,GAAG,CAACa,GAAJ,CAAQW,8BAAeD,iBAAKE,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR","sourcesContent":["import express from 'express';\nimport graphqlHTTP from 'express-graphql';\nimport { execute, subscribe } from 'graphql';\nimport schema from './schemas/schemas';\nimport { connect } from './db';\nimport path from 'path';\nimport { createServer } from 'http';\nimport mongo from 'mongoose';\nimport cors from 'cors';\nimport { PubSub } from 'graphql-subscriptions';\nimport { SubscriptionServer } from 'subscriptions-transport-ws';\n\nconst PORT = process.env.PORT || 8080;\nconst app = express();\nconst server = createServer(app);\n\nconnect();\napp.set('port', PORT);\napp.get('/', (req, res) => {\n  // res.json({ message: 'it WOrks' });\n});\n\nconst pubsub = new PubSub();\nmongo.connection.once('open', () => {\n  console.log('connected to database');\n})\napp.use('*', cors());\napp.use('/graphql', cors(), graphqlHTTP({\n  graphiql: true,\n  schema,\n  rootValue: 'global',\n  context: {\n    messageId: 'test',// <--- context\n  },\n}));\n\nserver.listen(PORT, () => {\n  new SubscriptionServer({\n    execute,\n    subscribe,\n    schema,\n  }, {\n    server: server,\n    path: '/subscriptions',\n  });\n  // console.log('Server running succefully...'. PORT)\n})\n\napp.use(express.static(path.join(__dirname, 'public')));\n"],"file":"index.js"}